spring.application.name=dbinstance
spring.application.instance_id=dbinstance

eureka.client.service-url.defaultZone=http://eureka:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${random.int}
eureka.instance.leaseRenewalIntervalInSeconds=5
eureka.client.registryFetchIntervalSeconds=5

#random for multiple instances
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
 
# input channel
spring.cloud.stream.bindings.input.destination=sync
# needed to group all instances into the same input channel
spring.cloud.stream.bindings.input.group=syncGroup
spring.cloud.stream.bindings.input.consumer.max-attempts=1
# set exchange type to fanout -> everyone receives a message like publish and subscriber pattern
spring.cloud.stream.rabbit.bindings.input.consumer.exchangeType=fanout
spring.cloud.stream.rabbit.bindings.output.producer.exchangeType=fanout
spring.cloud.stream.bindings.output.destination=sync
spring.cloud.stream.default.contentType=application/json

app.artistfile=/data/artist.csv
app.albumfile=/data/album.csv

#app.artistfile=C:/git/dhbw_db_impl/data/artist.csv
#app.albumfile=C:/git/dhbw_db_impl/data/album.csv
app.retry=3


logging.level.root=ERROR
logging.level.dhbw=INFO